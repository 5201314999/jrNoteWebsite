(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{179:function(t,e,i){"use strict";i.r(e);var r=i(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("新公司使用git 作为版本控制工具，跟之前只是简单使用git 处理自己的代码相比，实践中遇到了很多问题,所以利用在这里做下笔记，方便以后查阅。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),i("p",[i("a",{attrs:{href:"http://www.runoob.com/git/git-basic-operations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程"),i("OutboundLink")],1)]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),i("p",[t._v("小测试：- fork 远程A仓库到自己远程B仓库，编写本地代码提交到自己仓库B，再请求合并到远程A，如果远程A 仓库有新分支或者更新代码，如何处理")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),i("p",[t._v("git pull origin master --allow-unrelated-histories")]),t._v(" "),t._m(15),t._v(" "),i("p",[t._v("git规则")]),t._v(" "),i("p",[t._v(".gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的")]),t._v(" "),i("p",[t._v("解决办法")]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),i("p",[t._v("git log --oneline --graph")]),t._v(" "),t._m(18),t._v(" "),i("p",[i("a",{attrs:{href:"https://blog.csdn.net/zfs1994/article/details/52682129",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),i("OutboundLink")],1)]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),i("p",[i("a",{attrs:{href:"https://segmentfault.com/a/1190000019315509?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于git 的20个问题"),i("OutboundLink")],1),t._v("，快来试试你掌握得怎么样了吧")]),t._v(" "),t._m(23),t._v(" "),i("p",[t._v("如何搭建公司的版本控制系统")]),t._v(" "),t._m(24),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6#r_basic_merging",target:"_blank",rel:"noopener noreferrer"}},[t._v("分支与合并"),i("OutboundLink")],1)]),t._v(" "),i("li",[i("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA",target:"_blank",rel:"noopener noreferrer"}},[t._v("变基,实现快进合并"),i("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git-使用总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-使用总结","aria-hidden":"true"}},[this._v("#")]),this._v(" git 使用总结")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-git-的基本命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-的基本命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 1 git 的基本命令")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/jrNoteWebsite/main/git/gitCommand.png",alt:"Image text"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-git-核心命令运行图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-核心命令运行图","aria-hidden":"true"}},[this._v("#")]),this._v(" 2 git 核心命令运行图")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/jrNoteWebsite/main/git/git.png",alt:"git 核心命令运行图"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-git-拉取一个远程仓库非默认分支-从git-上拉取项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-拉取一个远程仓库非默认分支-从git-上拉取项目","aria-hidden":"true"}},[this._v("#")]),this._v(" 3 git 拉取一个远程仓库非默认分支(从git 上拉取项目)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("    1. 找一个干净目录，假设是git_work\n\n    2. cd git_work\n\n    3. git clone http://myrepo.xxx.com/project/.git ,这样在git_work目录下得到一个project子目录\n\n    4. cd project\n\n    5. git branch -a，列出所有分支名称如下：\n    remotes/origin/dev\n    remotes/origin/release\n\n    6. git checkout -b dev origin/dev 等价于 git branch dev  git checkout origin/dev\n    作用是checkout远程的dev分支，在本地起名为dev分支，并切换到本地的dev分支\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-添加跟踪新远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-添加跟踪新远程仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" 4 添加跟踪新远程仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("    先查看当前已有的远程版本库\n    git remote -v\n\n    添加新的需要跟踪的远程仓库\n    git remote add XXname [url]\n    \n    本地仓库获取该远程仓库的信息\n    git fetch XXname\n\n    拉取分支到本地创建为新分支XXname_Branchname,同时跟踪XXname/Branchname\n    git checkout --track XXname/Branchname -b XXname_Branchname\n\n    如果不需要了，删除该仓库的指令如下：\n    git remote rm XXname\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_5-组织分支从旧分支拉出了新分支的时候"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-组织分支从旧分支拉出了新分支的时候","aria-hidden":"true"}},[this._v("#")]),this._v(" 5 组织分支从旧分支拉出了新分支的时候")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("直接检出远程新分支即可，本地的分支不用改变，这样本地新增的代码还在。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_6-把本地项目上传到git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-把本地项目上传到git","aria-hidden":"true"}},[this._v("#")]),this._v(" 6 把本地项目上传到git")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("    git init \n    git add . \n    git commit -m 'message'\n    git remote add origin 'https://...'\n    git push -u origin master\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_7-出现-can-not-merge-unrelated-histories-处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-出现-can-not-merge-unrelated-histories-处理","aria-hidden":"true"}},[this._v("#")]),this._v(" 7 出现 can not merge unrelated-histories 处理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_8-git-ignore-问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-git-ignore-问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 8 git ignore 问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("命令")]),this._v(" "),e("p",[this._v("git rm -r --cached .")]),this._v(" "),e("p",[this._v("git add .")]),this._v(" "),e("p",[this._v("git commit -m 'update .gitignore'")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_9-查看提交历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-查看提交历史","aria-hidden":"true"}},[this._v("#")]),this._v(" 9 查看提交历史")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_10-git-创建秘钥，实现github-免密登录提交代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-git-创建秘钥，实现github-免密登录提交代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 10 git 创建秘钥，实现github 免密登录提交代码")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v('ssh-keygen -t rsa -C "1446418561@qq.com"')]),this._v(" "),e("li",[this._v("cd ~/.ssh")]),this._v(" "),e("li",[this._v("cat id_rsa.pub")]),this._v(" "),e("li",[this._v("添加到github 上ssh")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_11-其他命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-其他命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 11 其他命令")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('    // 查看某次提交变化的文件\n    //这里 -no-commit-id 将禁止提交哈希值出现在输出中，而 -name-only 只会打印文件名而不是它们的路径。\n    git diff-tree –no-commit-id –name-only -r {hash}\n\n    将N个提交压缩到单个提交中有两种方式：\n    如果要从头开始编写新的提交消息，请使用以下命令：\n\n    git reset --soft HEAD~N && git commit\n\n    如果你想在新的提交消息中串联现有的提交消息，那么需要提取这些消息并将它们传给 git commit，可以这样：\n    git reset --soft HEAD~N &&\n    git commit –edit -m"$(git log –format=%B –reverse .HEAD@{N})"\n\n    它列出了已合并到当前分支的分支。\n    git branch --merged \n\n    标记文件冲突已解决\n    git add \n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"小试牛刀"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小试牛刀","aria-hidden":"true"}},[this._v("#")]),this._v(" 小试牛刀")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"出师任务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#出师任务","aria-hidden":"true"}},[this._v("#")]),this._v(" 出师任务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])}],!1,null,null,null);a.options.__file="2git.md";e.default=a.exports}}]);