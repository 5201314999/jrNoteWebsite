(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{190:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"git-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-flow","aria-hidden":"true"}},[t._v("#")]),t._v(" Git Flow")]),t._v(" "),a("p",[a("code",[t._v("功能分支工作流")]),t._v("只定义了"),a("code",[t._v("功能分支")]),t._v("的职责， 但是现实中的项目往往复杂得多。我们可能要同时维护多个版本，我们可能要修复多个版本上的 bugs。所以就有了 Git Flow 工作流。")]),t._v(" "),a("p",[a("code",[t._v("Git Flow 工作流")]),t._v("继承了"),a("code",[t._v("功能分支工作流")]),t._v(", 定义了更为严格的分支模型。定义了各种分支的"),a("code",[t._v("职责")]),t._v("和"),a("code",[t._v("使用场景")]),t._v("以及"),a("code",[t._v("生命周期")]),t._v(":")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/5201314999/jrNote/blob/master/docs/.vuepress/public/docs/git_flow.png?raw=true",alt:"git flow配图"}})]),t._v(" "),a("h2",{attrs:{id:"_1-分支定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-分支定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 分支定义")]),t._v(" "),a("h3",{attrs:{id:"_1-1-历史分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-历史分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 历史分支")]),t._v(" "),a("p",[a("img",{attrs:{src:"images/history_branch.png",alt:"历史分支配图"}})]),t._v(" "),a("p",[t._v("GitFlow 使用两个分支来记录项目的历史记录，即"),a("code",[t._v("master")]),t._v("分支和"),a("code",[t._v("develop")]),t._v("分支. 所谓"),a("code",[t._v("历史分支")]),t._v("是相对于"),a("code",[t._v("临时分支")]),t._v(": "),a("code",[t._v("临时分支")]),t._v("有"),a("code",[t._v("功能分支")]),t._v("和"),a("code",[t._v("修复分支")]),t._v("以及"),a("code",[t._v("发布分支")]),t._v(", 这些分支完成自己的使命后就会被删除。而"),a("code",[t._v("发布分支")]),t._v("则一个没有'未来'的分支，它的历史可能停留在发布的那一刻。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("master")]),t._v(" 这是一个稳定的分支, 又称为保护分支， 表示正式发布的历史, 所有对外正式版本发布都会合并到这里, 并打上版本标签。")]),t._v(" "),a("li",[a("code",[t._v("develop")]),t._v(" 开发分支用来整合功能分支， 表示最新的开发状态。等价于"),a("code",[t._v("功能分支工作流")]),t._v("的"),a("code",[t._v("master")]),t._v("分支.")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意每次合并到 master 都要打上 tag, 方便定位")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-功能分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-功能分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 功能分支")]),t._v(" "),a("p",[a("code",[t._v("功能分支")]),t._v("的职责无须赘述。这里和"),a("code",[t._v("功能分支工作流")]),t._v("不一样的是，"),a("code",[t._v("功能分支")]),t._v(" 从"),a("code",[t._v("开发分支")]),t._v("中分叉出来，当新功能完成后，在合并回"),a("code",[t._v("开发分支")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/5201314999/jrNote/blob/master/docs/.vuepress/public/docs/feature_branch.png?raw=true",alt:"功能分支配图"}})]),t._v(" "),a("h3",{attrs:{id:"_1-3-发布分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-发布分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.3 发布分支")]),t._v(" "),a("p",[t._v("一旦到了发布时机，比如"),a("code",[t._v("开发分支")]),t._v("积累了足够的功能或者到了既定的发布日期。 就从"),a("code",[t._v("开发分支")]),t._v("上分叉出一个"),a("code",[t._v("发布分支")]),t._v(". 然后开始"),a("code",[t._v("发布循环")]),t._v("， 从此刻开始新的功能不会加到这个分支，这个分支只应该做 bug 修复， 文档生成和其他面向发布的任务。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/5201314999/jrNote/blob/master/docs/.vuepress/public/docs/release_branch.png?raw=true",alt:"发布分支配图"}})]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("发布分支")]),t._v("稳定到足以合并到"),a("code",[t._v("master")]),t._v("的时候， "),a("code",[t._v("发布分支")]),t._v("的生命周期可以结束了。这时候我们将稳定的发布分支合并到"),a("code",[t._v("master")]),t._v("分支，然后打上 tag 版本号；接着还需要将"),a("code",[t._v("发布分支")]),t._v("合并回开发分支。")]),t._v(" "),a("blockquote",[a("p",[t._v("该不该保留发布分支？"),a("br"),t._v("\n你可以删掉它，因为在 master 上打了 tag，即使你删掉了发布分支，你也可以很方便的重新创建一个：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 基于tag v1.0. 0创建一个分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b release/v1.0.0 v1.0.0\n")])])])]),t._v(" "),a("p",[t._v("从上可以看到发布分支的好处有：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("发布分支")]),t._v("是"),a("code",[t._v("开发分支")]),t._v("和"),a("code",[t._v("master分支")]),t._v("之间的缓冲区, 对于一个发布，会在发布分支中停留一段时间，等待稳定后才合并到 master")]),t._v(" "),a("li",[a("code",[t._v("发布分支")]),t._v("使得团队可以在完善当前发布版本的同时，不阻拦新功能的开发")])]),t._v(" "),a("h3",{attrs:{id:"_1-4-bug-修复分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-bug-修复分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.4 bug 修复分支")]),t._v(" "),a("p",[t._v("或者称为"),a("code",[t._v("补丁分支")]),t._v(", 补丁分支的职责是快速给"),a("code",[t._v("生产版本")]),t._v("打补丁，这些 bug 可能比较"),a("em",[t._v("紧急")]),t._v("，而且"),a("em",[t._v("跨越多个分支")]),t._v("， 所以我们通过新建一个"),a("code",[t._v("补丁分支")]),t._v(", 快速修复"),a("code",[t._v("master")]),t._v("上面的 bug，并合并到"),a("code",[t._v("master")]),t._v("和"),a("code",[t._v("开发分支")]),t._v(", 并打上 tag")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/5201314999/jrNote/blob/master/docs/.vuepress/public/docs/bug_branch.png?raw=true",alt:"补丁分支配图"}})]),t._v(" "),a("p",[t._v("这是"),a("strong",[t._v("唯一")]),t._v("一个可以从"),a("code",[t._v("master")]),t._v("分叉出来的分支类型。")]),t._v(" "),a("h3",{attrs:{id:"_1-5-小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-小结","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.5 小结")]),t._v(" "),a("p",[t._v("综上，可以看出 GitFlow 定义的这些分支类型都要较高的实用价值。试想一下除了"),a("code",[t._v("修复分支")]),t._v("，还有那些方式可以优雅地处理生产版本或跨越多个分支的 bug？但是现实项目可能复杂很多，对分支的应用也可以更加灵活。这有待我们去实践和总结")]),t._v(" "),a("h2",{attrs:{id:"_2-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 示例")]),t._v(" "),a("p",[t._v("这里以 SMS 项目为例, 来展示如何应用 Git Flow 工作流.")]),t._v(" "),a("h3",{attrs:{id:"_2-1-初始化项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-初始化项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 初始化项目")]),t._v(" "),a("p",[t._v("首先创建项目, 并创建一个 develop 分支, 以后更多操作是在 develop 分支上进行的:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" sms "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" sms\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 初始化git版本库")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 添加远程版本库")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" remote add origin git@myhost.com:web/sms.git\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 新建develop分支并切换")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b develop\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 初始化项目")]),t._v("\n$ "),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'# SMS项目'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" README.md\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 创建.gitignore文件, 用于忽略一些临时文件或自动编译生成文件")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("touch")]),t._v(" .gitignore\n"),a("span",{attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add "),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{attrs:{class:"token string"}},[t._v('"初始化SMS 项目框架"')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 推送到远程开发分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin develop\n")])])]),a("h3",{attrs:{id:"_2-2-功能开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-功能开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 功能开发")]),t._v(" "),a("p",[t._v("现在我和清茂开始独立开始自己的功能, 比如, 我开发"),a("code",[t._v("计费")]),t._v(", 清茂开发"),a("code",[t._v("统计")]),t._v(". 我们都新建自己的功能分支, 独立开发,独立测试, 互不干扰.")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 克隆版本库")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" clone origin git@myhost.com:web/sms.git\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 切换到develop分支")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout develop\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 创建功能分支, 功能分支是从开发分支分叉出去的")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b feature/charging\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 现在可以愉快地开发新功能了")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 将分支推送到远程版本库")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin feature/charging\n")])])]),a("h3",{attrs:{id:"_2-3-代码-review-和合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-代码-review-和合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3 代码 Review 和合并")]),t._v(" "),a("p",[t._v("ok, 我已经完成计费的功能, 而且基本功能也通过了测试, 是时候合并到"),a("code",[t._v("开发分支")]),t._v("了. 我发起了 Pull Request 了, 接受群众 Review.\n项目负责人可以接收 Pull Request 并将分支合并到"),a("code",[t._v("开发分支")]),t._v(".")]),t._v(" "),a("p",[t._v("当然 Pull Request 只是一个可选的步骤, 你可以直接将分支合并到"),a("code",[t._v("开发分支")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"_2-4-发布分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-发布分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.4 发布分支")]),t._v(" "),a("p",[t._v("现在统计和计费都开发完毕了, 项目负责人景烽掐指一算, 发布新版本吉时已到, 假设是 v0.1.0, 从"),a("code",[t._v("开发分支")]),t._v("中拉取出一个发布分支:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 保持最新")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout develop\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b release/v0.1.0\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin release/v0.1.0\n")])])]),a("p",[t._v("我们已经开始新的功能了, 突然间测试报了个 bug, 我得优先处理这个 bug:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 但是在切换分支报了个错:")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout release/v0.1.0\nerror: Your local changes to the following files would be overwritten by checkout:\n  xxx.js\nPlease commit your changes or stash them before you switch branches.\nAborting\n")])])]),a("p",[t._v("意思是, 你的本地已经修改了一些文件, 如果就这样 checkout 过去, 将会被覆盖你可以提交你的变更, 或者储藏(stash)起来.\n因为我的代码写到一半, 不能将没有意义的代码提交到版本库. 所以只能使用后者")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 保存现场")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout release/v0.1.0\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 修复完bug回到原来的功能分支")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 恢复现场")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("我"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop\n")])])]),a("h3",{attrs:{id:"_2-5-合并发布分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-合并发布分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.5 合并发布分支")]),t._v(" "),a("p",[t._v("发布分支在经过几次迭代之后, 稳定性已经足以合并到"),a("code",[t._v("master")]),t._v("了:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 切换到master分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 合并分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" merge release/v0.1.0\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 打个tag")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v0.1.0 -m "),a("span",{attrs:{class:"token string"}},[t._v('"v0.1.0: 包含了计费和统计等功能更新"')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 推送版本库")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 推送tags")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push --tags\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 切换到开发分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout develop\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" merge release/v0.1.0\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除发布分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d release/v0.1.0\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除远程发布分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push -d release/v0.1.0\n")])])]),a("h3",{attrs:{id:"_2-6-修复-bug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-修复-bug","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.6 修复 bug")]),t._v(" "),a("p",[t._v("客户报了一个生产版本的 bug, 这 bug 较为影响使用, 我们必须马上修复这个 bug 并发个版")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 切换到master分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 创建buf修复分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b bug/B20180212\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 修复bug并提交")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{attrs:{class:"token string"}},[t._v('"紧急修复xxxbug"')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 合并到master")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" merge bug/B20180212\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v0.1.1 -m "),a("span",{attrs:{class:"token string"}},[t._v('"紧急修复xxxbug"')]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 合并到开发分支, 因为开发分支同样有这个bug")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout develop\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" merge bug/B20180212\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除bug分支")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d bug/B20180212\n")])])])])}],!1,null,null,null);e.options.__file="23gitFlow.md";s.default=e.exports}}]);